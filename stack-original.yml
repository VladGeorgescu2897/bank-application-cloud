version: "3.8"

services:

  apigateway:
    image: lauracucu/api-gateway-microservice:1
    ports:
      - 2810:80
    environment:
      CLIENTS_SERVICE_API_ROUTE: bank-app_clients-service/api
      AUTH_SERVICE_API_ROUTE: bank-app_auth-service/api
      NODE_ENV: development
    networks:
      - gateway-clients-network
      - gateway-auth-network

  auth-service:
    image: lauracucu/auth-microservice:1
    environment:
      JWT_SECRET_KEY: myawesomeultrasecretkey
      JWT_ISSUER: student
      JWT_SUBJECT: 'Token pentru proiect'
      JWT_AUDIENCE: postman
      PGUSER: admin
      PGPASSWORD: admin
      PGHOST: db
      PGPORT: 5432
      PGDATABASE: bank
      NODE_ENV: development
    networks:
      - gateway-auth-network
      - auth-clients-network
      - auth-db-network

  clients-service:
    image: lauracucu/clients-microservice:1
    environment:
      IO_SERVICE_API_ROUTE: bank-app_io-service/api
      AUTH_SERVICE_API_ROUTE: bank-app_auth-service/api
      NODE_ENV: development
    networks:
      - gateway-clients-network
      - auth-clients-network
      - clients-io-network

  io-service:
    image: lauracucu/io-microservices:1
    environment:
      PGUSER: admin
      PGPASSWORD: admin
      PGHOST: db
      PGPORT: 5432
      PGDATABASE: bank
      NODE_ENV: development
    networks:
      - clients-io-network
      - io-db-network

  db:
    image: postgres:12
    environment:
      POSTGRES_DB: bank
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - io-db-network
      - auth-db-network
      - db-adminer-network
    volumes:
      - ./Database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - db-persistent-volume:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - db-adminer-network

volumes:
  db-persistent-volume:

networks:
  gateway-clients-network:
  gateway-auth-network:
  auth-clients-network:
  clients-io-network:
  auth-db-network:
  io-db-network:
  db-adminer-network:
