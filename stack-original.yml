version: "3.8"

services:
  auth-service:
    build: ./AuthMicroservice
    environment:
      JWT_SECRET_KEY: myawesomeultrasecretkey
      JWT_ISSUER: student
      JWT_SUBJECT: 'Token pentru proiect'
      JWT_AUDIENCE: postman
      PGUSER: admin
      PGPASSWORD: admin
      PGHOST: db
      PGPORT: 5432
      PGDATABASE: bank
      NODE_ENV: development
    networks:
      - gateway-auth-network
      - auth-business-logic-network
      - auth-db-network

  business-logic-service:
    build: ./BusinessLogicMicroservice
    environment:
      IO_SERVICE_API_ROUTE: bank-app_io-service/api
      AUTH_SERVICE_API_ROUTE: bank-app_auth-service/api
      NODE_ENV: development
    networks:
      - gateway-business-logic-network
      - auth-business-logic-network
      - business-logic-io-network
    # depends_on:
    #   - io-service

  io-service:
    build: ./IOMicroservice
    environment:
      PGUSER: admin
      PGPASSWORD: admin
      PGHOST: db
      PGPORT: 5432
      PGDATABASE: bank
      NODE_ENV: development
    networks:
      - business-logic-io-network
      - io-db-network
    # depends_on:
    #   - db

  db:
    image: postgres:12
    environment:
      POSTGRES_DB: bank
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - io-db-network
      - auth-db-network
      - db-adminer-network
    volumes:
      - "${PWD}/Database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql"
      - db-persistent-volume:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - db-adminer-network
    # depends_on:
    #   - db

  kong_gateway:
    image: kong:latest
    volumes:
      - "${PWD}/kong:/usr/local/kong/declarative"
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 80:8000
      - 443:8443
      - 2810:80
     # deploy:
      #  placement:
       #   constraints: [node.role == manager]
    networks:
      - gateway-business-logic-network
      - gateway-auth-network

volumes:
  db-persistent-volume:

networks:
  gateway-business-logic-network:
  gateway-auth-network:
  auth-business-logic-network:
  business-logic-io-network:
  auth-db-network:
  io-db-network:
  db-adminer-network:
